<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rdb="http://www.dangdang.com/schema/ddframe/rdb"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
           http://www.dangdang.com/schema/ddframe/rdb
           http://www.dangdang.com/schema/ddframe/rdb/rdb.xsd">

    <!-- 数据库配置 -->
    <bean id="shardingDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close" primary="true">
        <property name="driverClassName" value="${mybatis.driverClass}"/>
        <property name="url" value="${mybatis.jdbcUrl}"/>
        <property name="username" value="${mybatis.username}"/>
        <property name="password" value="${mybatis.password}"/>
        <property name="defaultAutoCommit" value="${mybatis.defaultAutoCommit}"/>
        <property name="initialSize" value="${mybatis.initialSize}"/>
        <property name="maxActive" value="${mybatis.maxActive}"/>
        <property name="minIdle" value="${mybatis.minIdle}"/>
        <property name="maxWait" value="${mybatis.maxWait}"/>
        <property name="maxIdle" value="${mybatis.maxIdle}"/>
    </bean>

    <bean id="shardingSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="shardingDataSource"/>
        <property name="configLocation" value="classpath:mybatis-Config.xml"/>
        <property name="mapperLocations">
            <list>
                <value>classpath*:sqlmap/**/*.xml</value>
            </list>
        </property>
    </bean>

    <!-- 配置字段，分表之后会根据该字段进行hash查找数据所在表进行sql查询，其中ShardingKeyAlgorithm指配置的哈希算法 -->
    <rdb:strategy id="idTableStrategy" sharding-columns="id"
                  algorithm-class="com.mine.util.shardingutil.ShardingKeyAlgorithm"/>

    <rdb:strategy id="memberidTableStrategy" sharding-columns="memberid"
                  algorithm-class="com.mine.util.shardingutil.ShardingKeyAlgorithm"/>

    <!-- 配置表以及对应的分表,其中logic-table指对应表名，actual-tables指所有分表，后缀${0..49}表示分表从0开始到49，table-strategy指引用的检索配置 -->
    <rdb:data-source id="shardingDataSource">
        <rdb:sharding-rule data-sources="memberDataSource">
            <rdb:table-rules>
                <rdb:table-rule logic-table="t_business_info" actual-tables="t_business_info${0..49}"
                                table-strategy="businessidTableStrategy">
                    <rdb:generate-key-column column-name="id"/>
                </rdb:table-rule>
                <rdb:table-rule logic-table="t_member_info" actual-tables="t_member_info${0..49}"
                                table-strategy="memberidTableStrategy">
                    <rdb:generate-key-column column-name="id"/>
                </rdb:table-rule>
            </rdb:table-rules>
        </rdb:sharding-rule>
        <!--<rdb:props>
            <prop key="sql.show">true</prop>
        </rdb:props>-->
    </rdb:data-source>

    <bean id="shardingMapperScannerConfig" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="shardingSqlSessionFactory"/>
        <property name="basePackage" value="com.mine"/>
    </bean>

</beans>
